{"version":3,"sources":["components/NavigationBar.js","About.js","components/Getc19data.js","C19.js","App.js","serviceWorker.js","index.js","coding1.png","coding2.png"],"names":["Styles","styled","div","NavigationBar","Navbar","expand","Brand","href","About","className","class","Getc19data","props","state","items","axios","get","then","response","setState","data","catch","error","console","log","this","week","reco","deaths","totCases","totalCase","labels","datasets","label","pointRadius","fill","lineTension","borderColor","borderWidth","NewCase","days","dailyConf","DaliyReco","dailyReco","totalRec","totalConf","totalInf","totalDeath","newCase","lastChange","options","title","display","text","fontSize","legend","position","Component","C19","App","Fragment","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message","module","exports"],"mappings":"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","file":"static/js/main.f4f8a5ff.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Nav, Navbar, Form, FormControl } from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\nconst Styles = styled.div`\r\n  .navbar { background-color: #222; }\r\n  a, .navbar-nav, .navbar-light .nav-link {\r\n    color: #9FFFCB;\r\n    &:hover { color: white; }\r\n  }\r\n  .navbar-brand {\r\n    font-size: 1.2em;\r\n    color: #9FFFCB;\r\n    &:hover { color: white; }\r\n  }\r\n  .form-center {\r\n    position: absolute !important;\r\n    left: 25%;\r\n    right: 25%;\r\n  }\r\n`;\r\nexport const NavigationBar = () => (\r\n  <Styles>\r\n    <Navbar expand=\"lg\">\r\n      <Navbar.Brand href='/'>Home</Navbar.Brand>\r\n    </Navbar>\r\n  </Styles>\r\n)","import React from 'react';\r\nimport styled from 'styled-components'; \r\nexport const About = () => (\r\n  <div className=\"App\">\r\n    <div className=\"App-header-full\">\r\n      <h1>About <code class=\"code\">#Include</code> Corp</h1>\r\n      <hr />\r\n      <br />\r\n      <p>\r\n        We are community driven Technology Club.  Here in, everyone will find something interesting made with care and enthusisam and ofcourse that include multitude of Technologies.\r\n        <strong>We are #Include</strong>\r\n      </p>\r\n      <br />\r\n      <hr />\r\n      <br />            \r\n    </div>    \r\n  </div>\r\n)","import React, { Component } from 'react';\r\nimport {Line} from 'react-chartjs-2';\r\nimport axios from 'axios';\r\n\r\n\r\nexport class Getc19data extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          items: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get(\"https://1d894b0be4c7.ngrok.io/getdata\")\r\n            .then (response => {\r\n                // console.log(response)\r\n                this.setState({items: response.data})\r\n                // console.log(\"Items: \" + this.items)\r\n        })\r\n        .catch(error => {\r\n            console.log(\"Error: \" + error)\r\n        })\r\n    }     \r\n    render(){\r\n        const { items } = this.state;\r\n        console.log(\"Weeks: \" + items.week)\r\n        console.log(\"Recoverd: \" + items.reco)\r\n        console.log(\"Deaths: \" + items.deaths)\r\n        console.log(\"Deaths: \" + items.totCases)\r\n         const totalCase = {\r\n            labels: items.deaths,\r\n            datasets: [\r\n              {\r\n                label: 'Total Cases',\r\n                pointRadius: 0.5,\r\n                fill: false,\r\n                lineTension: 0.5,\r\n                borderColor: '#FF0000',\r\n                borderWidth: 2,\r\n                data: items.totCases\r\n              }\r\n          ]\r\n        };\r\n\r\n        const NewCase = {\r\n            labels: items.days,\r\n            datasets: [\r\n              {\r\n                label: 'Daily Cases',\r\n                pointRadius: 0.5,\r\n                fill: false,\r\n                lineTension: 0.5,\r\n                borderColor: '#FFA500',\r\n                borderWidth: 2,\r\n                data: items.dailyConf\r\n              }\r\n          ]\r\n        };\r\n\r\n        const DaliyReco = {\r\n            labels: items.days,\r\n            datasets: [{\r\n                label: 'Daily Recovered',\r\n                pointRadius: 0.5,\r\n                fill: false,\r\n                lineTension: 0.5,\r\n                borderColor: '#008000',\r\n                borderWidth: 2,\r\n                data: items.dailyReco       \r\n            }]\r\n        }\r\n        \r\n/*         const options = {\r\n            title: \"Total Cases vs Deaths\",\r\n        };\r\n\r\n        const data = [\r\n            [items.deaths, items.totCases],\r\n        ] */\r\n        \r\n        const totalRec = items.totalRec;\r\n        const totalConf = items.totalInf;\r\n        const totalDeath = items.totalDeath;\r\n        const newCase = items.dailyConf;\r\n        const days = items.days;\r\n        const lastChange = items.lastChange;\r\n        const dailyReco = items.dailyReco\r\n\r\n        console.log(\"TotalRec\", totalRec);\r\n        console.log(\"TotalConf\", totalConf);\r\n        console.log(\"TotalDeath\", totalDeath);\r\n        console.log(\"NewCase: \", newCase);\r\n        console.log(\"Days: \", days);\r\n        console.log(\"Last Change: \", lastChange);\r\n       // console.log(\"datstate: \", datstate)\r\n        return (\r\n            <div class=\"App\">\r\n                <div class=\"App-header\">\r\n                    <h1>Covid-19 Tracker India</h1>\r\n                    <p class=\"datas\">\r\n                        <table>\r\n                            <tr>\r\n                                <th>Total Cases: </th>\r\n                                <th><p class=\"red\">{totalConf}</p></th>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>Total Deaths: </th>\r\n                                <th><p class=\"blue\">{totalDeath}</p></th>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>Total Recoverd: </th>\r\n                                <th><p class=\"green\">{totalRec}</p></th>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>Daily Change: </th>\r\n                                <th><p class=\"orange\">{lastChange}</p></th>\r\n                            </tr>                                                         \r\n                        </table>\r\n                    </p>\r\n                    <div>\r\n                        <Line class=\"graph\"\r\n                            data={totalCase}\r\n                            options={{\r\n                                    title:{\r\n                                    display:true,\r\n                                    text:'Covid-19 India Total Cases vs Deaths',\r\n                                    fontSize:20\r\n                                    },\r\n                                    legend:{\r\n                                        display:true,\r\n                                        position:'right'\r\n                                    }\r\n                            }}\r\n                        />\r\n                        <hr class=\"white-divide\" />\r\n                        <Line class=\"graph\"\r\n                            data={NewCase}\r\n                            options={{\r\n                                    title:{\r\n                                    display:true,\r\n                                    text:'Covid-19 India Daily Change',\r\n                                    fontSize:20\r\n                                    },\r\n                                    legend:{\r\n                                        display:true,\r\n                                        position:'right'\r\n                                    }\r\n                            }}\r\n                        />    \r\n                        <Line class=\"graph\"\r\n                            data={DaliyReco}\r\n                            options={{\r\n                                    title:{\r\n                                    display:true,\r\n                                    text:'Covid-19 India recovered',\r\n                                    fontSize:20\r\n                                    },\r\n                                    legend:{\r\n                                        display:true,\r\n                                        position:'right'\r\n                                    }\r\n                            }}\r\n                        />                                                                  \r\n                        <br />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Getc19data;","import React from 'react';\r\nimport {Line} from 'react-chartjs-2';\r\nimport {Getc19data} from './components/Getc19data'\r\n\r\nexport const C19 = (props) => (\r\n  <div>\r\n    <Getc19data />\r\n  </div>\r\n)","import React, { Component } from 'react';\nimport './App.css';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { NavigationBar } from './components/NavigationBar'\n \nimport './index.css'\nimport { Home } from './Home';\nimport { About } from './About';\nimport { Blog } from './Blog'\nimport { Apps } from './Apps'\nimport { Videos } from './Videos'\nimport { C19 } from './C19'\n\nimport { MDBCol, MDBContainer, MDBRow, MDBFooter } from \"mdbreact\";\n\nfunction App(){\n  return (\n    <div class=\"App\">\n    <React.Fragment>\n    <Router>\n      <NavigationBar />\n      <Switch>\n        <Route exact path=\"/\" component={C19} />\n        <Route path=\"/about\" component={About} />\n    </Switch>\n    </Router>\n    </React.Fragment>\n    </div>\n  );\n}\n\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/coding1.e586ae79.png\";","module.exports = __webpack_public_path__ + \"static/media/coding2.21624d04.png\";"],"sourceRoot":""}